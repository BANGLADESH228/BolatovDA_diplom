Argument referring to the user configuration file isn't passed!
Therefore, a standard configuration file will be used.

-----------------------------------------------------------------------------------------------------------

Checking the installed operating system: Kali GNU/Linux

-----------------------------------------------------------------------------------------------------------

Checking if the jq is installed...
The programm jq is allready installed

-----------------------------------------------------------------------------------------------------------

Checking if the yc is installed...
The programm yc is allready installed

-----------------------------------------------------------------------------------------------------------

Checking the current version of the yc: 0.106.0

-----------------------------------------------------------------------------------------------------------

Checking the latest version of the yc: 0.105.0

-----------------------------------------------------------------------------------------------------------

The latest version of the yc is allready installed: 0.106.0

-----------------------------------------------------------------------------------------------------------

Checking if the terraform is installed...
The programm terraform is allready installed

-----------------------------------------------------------------------------------------------------------

Checking the current version of the terraform: v1.4.6

-----------------------------------------------------------------------------------------------------------

Checking the latest version of the terraform: v1.5.0

-----------------------------------------------------------------------------------------------------------

Need to update terraform to the latest version v1.5.0

-----------------------------------------------------------------------------------------------------------

Installing terraform...

-----------------------------------------------------------------------------------------------------------

ITS OK

-----------------------------------------------------------------------------------------------------------

Starting to init a CLI profile...
Welcome! This command will take you through the configuration process.
Pick desired action:
 [1] Re-initialize this profile 'terraform-user' with new settings 
 [2] Create a new profile
 [3] Switch to and re-initialize existing profile: 'default'
 [4] Switch to and re-initialize existing profile: 'dias-kpfu-1'
 [5] Switch to and re-initialize existing profile: 'dias-kpfu-2'
 [6] Switch to and re-initialize existing profile: 'dias1'
 [7] Switch to and re-initialize existing profile: 'dias23'
Please enter your numeric choice: Enter profile name. Names start with a lower case letter and contain only lower case letters a-z, digits 0-9, and hyphens '-': Please go to https://oauth.yandex.ru/authorize?response_type=token&client_id=1a6990aa636648e9b2ef855fa7bec2fb in order to obtain OAuth token.

Please enter OAuth token: You have one cloud available: 'vkr' (id = b1g6uflecfrlkgjkorgq). It is going to be used by default.
Please choose folder to use:
 [1] folder2 (id = b1gnqb6034hcf5irqh4h)
 [2] Create a new folder
Please enter your numeric choice: Your current folder has been set to 'folder2' (id = b1gnqb6034hcf5irqh4h).
Do you want to configure a default Compute zone? [Y/n] Which zone do you want to use as a profile default?
 [1] ru-central1-a
 [2] ru-central1-b
 [3] ru-central1-c
 [4] Don't set default zone
Please enter your numeric choice: Your profile default Compute zone has been set to 'ru-central1-b'.

-----------------------------------------------------------------------------------------------------------

Checking your CLI settings:

-----------------------------------------------------------------------------------------------------------

token: y0_AgAAAABnfn6MAATuwQAAAADhppCtLyT-CqqGQkypvU81KyXni9ijkAk
cloud-id: b1g6uflecfrlkgjkorgq
folder-id: b1gnqb6034hcf5irqh4h
compute-default-zone: ru-central1-b

-----------------------------------------------------------------------------------------------------------

Starting to create a service account...

-----------------------------------------------------------------------------------------------------------

ERROR: rpc error: code = AlreadyExists desc = Service account 'user1@b1g6uflecfrlkgjkorgq' already exists
+----------------------+-------+
|          ID          | NAME  |
+----------------------+-------+
| ajeu3ed4u14ksi2pibet | user1 |
+----------------------+-------+


-----------------------------------------------------------------------------------------------------------

Creating an authorised key...

-----------------------------------------------------------------------------------------------------------

id: aje5i4nn6r8llib7m5bs
service_account_id: ajeu3ed4u14ksi2pibet
created_at: "2023-06-13T01:17:12.186026278Z"
key_algorithm: RSA_2048


-----------------------------------------------------------------------------------------------------------

Creating a CLI profile...

-----------------------------------------------------------------------------------------------------------

ERROR: profile 'terraform-user' already exists

-----------------------------------------------------------------------------------------------------------

Setting the profile configuration...

-----------------------------------------------------------------------------------------------------------

Terraform initialisation begins: 

[0m[1mInitializing the backend...[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of yandex-cloud/yandex from the dependency lock file
[31m[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mInvalid provider registry host[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0mThe host "registry.terraform.io" given in in provider source address
[31mâ”‚[0m [0m"registry.terraform.io/yandex-cloud/yandex" does not offer a Terraform
[31mâ”‚[0m [0mprovider registry.
[31mâ•µ[0m[0m
[0m[0m

-----------------------------------------------------------------------------------------------------------

Terraform planning check: 

-----------------------------------------------------------------------------------------------------------


Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # yandex_compute_instance.vm-1[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "vm-1" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                DBA:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9ZXEfDUgqPX0InSCHYkXh40LsUwcHtqMsHvuZUe9ch+I4L2gTUu1Yt0QDCMVHr/Y/SalY7ors8/AxzoOX1QdFQyXPTtXMiBOx9e0+uo2lvIEGFrEy5SJy88SZmwzxvWEKFchhyA+zZ7S4u6kg7gLzGGhz9TxxuAw9vECk+qnp9IvOsB7aeZ05I+e/VkTIYM+LQw8GBvEUaNL05ohi+0H4BIKMGHcYyo2mBSD7YWxgGS3zNVVhD7ZW6syXgG/gj+PLieBEIh0BAhr5xd4tzRBBYrencMFOCJ8spz7eD2wu0cRi0mrEwUS7qFllhV7Kcv1K6I9rt0iOzWnl4xU/eJtuX4yGh6nDa7aQTnoR5qTbW7YZdnuIdaQCa8R9tf6pIwTbGcjL1AN6pz/Y5BP5IU3iy3lZbvvkrlqbW0aj9CU3ZxeOKpFWGKDVVvSwiDE5hp04ThfvTXwl9fyuFX8aoD3srQUSRtm5PfwNe2AanPs32hYjAv9V+S0otyg9sIg2rJc= root@kali
            EOT
        }
      [32m+[0m[0m name                      = "linux-vm-1"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v3"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-b"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8o41nbel1uqngk0op2"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = (known after apply)
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 100
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }
    }

[1m  # yandex_compute_instance.vm-2[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "vm-2" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9ZXEfDUgqPX0InSCHYkXh40LsUwcHtqMsHvuZUe9ch+I4L2gTUu1Yt0QDCMVHr/Y/SalY7ors8/AxzoOX1QdFQyXPTtXMiBOx9e0+uo2lvIEGFrEy5SJy88SZmwzxvWEKFchhyA+zZ7S4u6kg7gLzGGhz9TxxuAw9vECk+qnp9IvOsB7aeZ05I+e/VkTIYM+LQw8GBvEUaNL05ohi+0H4BIKMGHcYyo2mBSD7YWxgGS3zNVVhD7ZW6syXgG/gj+PLieBEIh0BAhr5xd4tzRBBYrencMFOCJ8spz7eD2wu0cRi0mrEwUS7qFllhV7Kcv1K6I9rt0iOzWnl4xU/eJtuX4yGh6nDa7aQTnoR5qTbW7YZdnuIdaQCa8R9tf6pIwTbGcjL1AN6pz/Y5BP5IU3iy3lZbvvkrlqbW0aj9CU3ZxeOKpFWGKDVVvSwiDE5hp04ThfvTXwl9fyuFX8aoD3srQUSRtm5PfwNe2AanPs32hYjAv9V+S0otyg9sIg2rJc= root@kali
            EOT
        }
      [32m+[0m[0m name                      = "linux-vm-2"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v3"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-b"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd82sqrj4uk9j7vlki3q"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = (known after apply)
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 100
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }
    }

[1m  # yandex_vpc_network.network-1[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "network-1" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "network1"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # yandex_vpc_subnet.subnet-1[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet-1" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnet1"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "192.168.10.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-b"
    }

[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m external_ip_address_vm_1 = (known after apply)
  [32m+[0m[0m external_ip_address_vm_2 = (known after apply)
  [32m+[0m[0m internal_ip_address_vm_1 = (known after apply)
  [32m+[0m[0m internal_ip_address_vm_2 = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

-----------------------------------------------------------------------------------------------------------

Confirm the settings: 

-----------------------------------------------------------------------------------------------------------


Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # yandex_compute_instance.vm-1[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "vm-1" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                DBA:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9ZXEfDUgqPX0InSCHYkXh40LsUwcHtqMsHvuZUe9ch+I4L2gTUu1Yt0QDCMVHr/Y/SalY7ors8/AxzoOX1QdFQyXPTtXMiBOx9e0+uo2lvIEGFrEy5SJy88SZmwzxvWEKFchhyA+zZ7S4u6kg7gLzGGhz9TxxuAw9vECk+qnp9IvOsB7aeZ05I+e/VkTIYM+LQw8GBvEUaNL05ohi+0H4BIKMGHcYyo2mBSD7YWxgGS3zNVVhD7ZW6syXgG/gj+PLieBEIh0BAhr5xd4tzRBBYrencMFOCJ8spz7eD2wu0cRi0mrEwUS7qFllhV7Kcv1K6I9rt0iOzWnl4xU/eJtuX4yGh6nDa7aQTnoR5qTbW7YZdnuIdaQCa8R9tf6pIwTbGcjL1AN6pz/Y5BP5IU3iy3lZbvvkrlqbW0aj9CU3ZxeOKpFWGKDVVvSwiDE5hp04ThfvTXwl9fyuFX8aoD3srQUSRtm5PfwNe2AanPs32hYjAv9V+S0otyg9sIg2rJc= root@kali
            EOT
        }
      [32m+[0m[0m name                      = "linux-vm-1"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v3"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-b"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd8o41nbel1uqngk0op2"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = (known after apply)
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 100
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }
    }

[1m  # yandex_compute_instance.vm-2[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "vm-2" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9ZXEfDUgqPX0InSCHYkXh40LsUwcHtqMsHvuZUe9ch+I4L2gTUu1Yt0QDCMVHr/Y/SalY7ors8/AxzoOX1QdFQyXPTtXMiBOx9e0+uo2lvIEGFrEy5SJy88SZmwzxvWEKFchhyA+zZ7S4u6kg7gLzGGhz9TxxuAw9vECk+qnp9IvOsB7aeZ05I+e/VkTIYM+LQw8GBvEUaNL05ohi+0H4BIKMGHcYyo2mBSD7YWxgGS3zNVVhD7ZW6syXgG/gj+PLieBEIh0BAhr5xd4tzRBBYrencMFOCJ8spz7eD2wu0cRi0mrEwUS7qFllhV7Kcv1K6I9rt0iOzWnl4xU/eJtuX4yGh6nDa7aQTnoR5qTbW7YZdnuIdaQCa8R9tf6pIwTbGcjL1AN6pz/Y5BP5IU3iy3lZbvvkrlqbW0aj9CU3ZxeOKpFWGKDVVvSwiDE5hp04ThfvTXwl9fyuFX8aoD3srQUSRtm5PfwNe2AanPs32hYjAv9V+S0otyg9sIg2rJc= root@kali
            EOT
        }
      [32m+[0m[0m name                      = "linux-vm-2"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v3"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-b"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd82sqrj4uk9j7vlki3q"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = (known after apply)
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 100
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 2
        }
    }

[1m  # yandex_vpc_network.network-1[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "network-1" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "network1"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # yandex_vpc_subnet.subnet-1[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet-1" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnet1"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "192.168.10.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-b"
    }

[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m external_ip_address_vm_1 = (known after apply)
  [32m+[0m[0m external_ip_address_vm_2 = (known after apply)
  [32m+[0m[0m internal_ip_address_vm_1 = (known after apply)
  [32m+[0m[0m internal_ip_address_vm_2 = (known after apply)
[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
[0m[1myandex_vpc_network.network-1: Creating...[0m[0m
[0m[1myandex_vpc_network.network-1: Creation complete after 1s [id=enpctj8f606d7u2mp90o][0m
[0m[1myandex_vpc_subnet.subnet-1: Creating...[0m[0m
[0m[1myandex_vpc_subnet.subnet-1: Creation complete after 1s [id=e2lj743jukl0m5facnmo][0m
[0m[1myandex_compute_instance.vm-2: Creating...[0m[0m
[0m[1myandex_compute_instance.vm-1: Creating...[0m[0m
[0m[1myandex_compute_instance.vm-1: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.vm-2: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.vm-2: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.vm-1: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.vm-1: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.vm-2: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.vm-1: Creation complete after 31s [id=epd57quj13l0uuchuads][0m
[0m[1myandex_compute_instance.vm-2: Creation complete after 38s [id=epdkjtcnku8vatlov0q0][0m
[0m[1m[32m
Apply complete! Resources: 4 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mexternal_ip_address_vm_1 = "62.84.121.110"
external_ip_address_vm_2 = "51.250.101.27"
internal_ip_address_vm_1 = "192.168.10.17"
internal_ip_address_vm_2 = "192.168.10.13"

-----------------------------------------------------------------------------------------------------------

